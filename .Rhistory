colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(n)
plotTheme <- function(base_size = 12) {
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient(low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,30,100,300,1000, 3000)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
plotTheme <- function(base_size = 12) {
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient(low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,30,100,300,1000, 3000)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,30,100,300,1000, 3000)) + theme(legend.position = c(.85, .25))+
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,30,100, 200)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
n
as.numeric(n$x)
n$x<-as.numeric(n$x)
plotTheme <- function(base_size = 12) {
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,30,100, 200)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
colMax(n)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(n)
colMax(n$x)
colMax(n[8])
ppsq <- read.csv("pricepersqft.csv", header = TRUE)
ppsq1 <- na.omit(ppsq)
pps<-aggregate(ppsq1[, 7:81], list(ppsq1$County,ppsq1$State), mean)
pps <- na.omit(pps)
pps<-gather(pps, year, price, November.2010:January.2017,factor_key = TRUE)
pps$year <- gsub("[^0-9]", "", pps$year)
states <- map_data("state")
counties <- map_data("county")
state <- ggplot(data = states, mapping = aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
base <- state +
geom_polygon(data = counties, fill = NA, color = "white") +
geom_polygon(color = "black", fill = NA)
colnames(counties)[6]<-"Group.1"
counties$Group.1 <- as.factor(counties$Group.1)
pps$Group.1<-tolower(pps$Group.1)
pps<-aggregate(pps[, 4], list(pps$Group.1,pps$year), mean)
pps
combined <- sort(union(levels(counties$Group.1), levels(pps$Group.1)))
n <- inner_join(mutate(counties, Group.1=factor(Group.1, levels=combined)),
mutate(pps, Group.1=factor(Group.1, levels=combined)))
n$x<-as.numeric(n$x)
plotTheme <- function(base_size = 12) {
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,.5,1,2, 4)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,.5,1,2, 4,5)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,.5,1,2, 4,5)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
lapply(sort(unique(n$Group.2)), function(i) {
base +
geom_polygon(data = n[n$Group.2==i,], aes(fill = x), color = "white") +
geom_polygon(color = "black", fill = NA) +
scale_fill_gradient("Price/sqf",low = "#a3fc25", high = "#ff2828",
space = "Lab", na.value = "grey50",
guide = "colourbar", trans = "log10",
labels = scales::dollar_format(prefix = "$"),
breaks = c(0,.5,1,2, 3)) +
labs(title="Average price per square foot by county ", subtitle=i, fill = "Price") + plotTheme()
})
sf <- read.csv("https://raw.githubusercontent.com/simonkassel/Visualizing_SF_home_prices_R/master/Data/SF_home_sales_demo_data.csv")
sf
write.csv(sf, "sfhomes.csv", row.names=FALSE)
sfhomes <-read.csv("sfhomes.csv", header = TRUE, as.is = T)
sfhs <- na.omit(sfhomes)
sfhomes <-read.csv("sfhomes.csv", header = TRUE, as.is = T)
sfhs <- na.omit(sfhomes)
sfhs$SaleYr <- as.factor(sfhs$SaleYr)
sfhs$SaleYr <- as.factor(sfhs$SaleYr)
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
strip.text = element_text(size=12),
axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
nb <- readOGR("SF", "geo_export_6cb760e3-ca2c-47f6-9af2-01ec1009ce71")
plot(nb)
bbox <- nb@bbox
sf_bbox <- c(left = bbox[1, 1] - .01, bottom = bbox[2, 1] - .005,
right = bbox[1, 2] + .01, top = bbox[2, 2] + .005)
basemap <- get_stamenmap(
bbox = sf_bbox,
zoom = 13,
maptype = "toner-lite")
bmMap <- ggmap(basemap) + mapTheme() +
labs(title="San Francisco basemap")
bmMap
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = palette_8_colors,
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)",
caption="Source: San Francisco Office of the Assessor-Recorder\n@KenSteif & @SimonKassel")
prices_mapped_by_year
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = palette_8_colors,
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)",
caption="Source: San Francisco Office of the Assessor-Recorder\n@KenSteif & @SimonKassel")
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = palette_8_colors,
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)",
caption="Source: San Francisco Office of the Assessor-Recorder\n@KenSteif & @SimonKassel")
prices_mapped_by_year
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = palette_8_colors,
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)",
caption="Source: San Francisco Office of the Assessor-Recorder\n@KenSteif & @SimonKassel")
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)",
caption="Source: San Francisco Office of the Assessor-Recorder\n@KenSteif & @SimonKassel")
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#2D97AA","#4D8CB4","#6E81BF","#8E76C9","#AF6BD4","#CF60DE","#F055E9"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
bmMap
sfhomes <-read.csv("sfhomes.csv", header = TRUE, as.is = T)
sfhs <- na.omit(sfhomes)
sfhs$SaleYr <- as.factor(sfhs$SaleYr)
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
strip.text = element_text(size=12),
axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
nb <- readOGR("SF", "geo_export_6cb760e3-ca2c-47f6-9af2-01ec1009ce71")
plot(nb)
bbox <- nb@bbox
sf_bbox <- c(left = bbox[1, 1] - .01, bottom = bbox[2, 1] - .005,
right = bbox[1, 2] + .01, top = bbox[2, 2] + .005)
basemap <- get_stamenmap(
bbox = sf_bbox,
zoom = 13,
maptype = "toner-lite")
ggmap(basemap) +
stat_density2d(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#2D97AA","#4D8CB4","#6E81BF","#8E76C9","#AF6BD4","#CF60DE","#F055E9"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#2D97AA","#4D8CB4","#6E81BF","#8E76C9","#AF6BD4","#CF60DE","#F055E9"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#ffff00","#ffd400","#ffbf00","#ff9000","#ff6100","#ff4c00","#ff0000"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("e9ff00","#ffff00","#ffd400","#ffbf00","#ff9000","#ff6100","#ff0000"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#e9ff00","#ffff00","#ffd400","#ffbf00","#ff9000","#ff6100","#ff0000"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="Distribution of San Francisco home prices",
subtitle="Nominal prices (2009 - 2015)")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Sale Price",
colors = c("#e9ff00","#ffff00","#ffd400","#ffbf00","#ff9000","#ff6100","#ff0000"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="San Francisco home prices",
subtitle="2009 - 2015")
ggmap(basemap) +
geom_point(data = sfhs, aes(x = long, y = lat, color = SalePrice),
size = 0.25, alpha = .6) +
facet_wrap(~SaleYr, scales = "fixed", ncol = 4) +
coord_map() +
mapTheme() + theme(legend.position = c(.85, .25)) +
scale_color_gradientn("Price",
colors = c("#e9ff00","#ffff00","#ffd400","#ffbf00","#ff9000","#ff6100","#ff0000"),
labels = scales::dollar_format(prefix = "$")) +
labs(title="San Francisco home prices",
subtitle="2009 - 2015")
library(ggplot2)
library(readr)
library(igraph)
library(dplyr)
library(tidyr)
library(plyr)
library(data.table)
library(ggmap)
library(maptools)
library(ggthemes)
library(rgeos)
library(broom)
library(gridExtra)
library(reshape2)
library(scales)
library(rgdal)
plotTheme <- function(base_size = 12) {
theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
panel.background = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 18,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
strip.text = element_text(size=12),
axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"))
}
price <- read.csv("price.csv", header = TRUE)
p1 <- na.omit(price)
p1.f<-filter(p1, State %in% c("WA"))
p1.wa<-gather(p1.f, year, price, Nov.10:Jan.17,factor_key = TRUE)
p1.wa<- p1.wa %>%
group_by(County)
